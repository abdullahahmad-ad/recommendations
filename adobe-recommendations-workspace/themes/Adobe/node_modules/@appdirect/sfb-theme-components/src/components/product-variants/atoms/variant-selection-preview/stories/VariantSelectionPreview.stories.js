import React from 'react';
import VariantSelectionPreview from '../VariantSelectionPreview';
import { variantImages,
    selectedOptionsAllValid,
    selectedOptionsNotAllValid,
    configuratorMock,
    callToActionsMock } from '../../../../../../mocks/product/product-variants/productVariants';

export default {
    title: 'Components (Preview)/Product Variants/Atoms/VariantSelectionPreview',
    component: VariantSelectionPreview
};

export const Default = {
    render: () => (
        <VariantSelectionPreview
            selectedOptions={selectedOptionsNotAllValid}
            productName="Product Name"
            callToActions={callToActionsMock}
            configurator={configuratorMock}
            selectedEdition={configuratorMock.selectedEdition}
        />
    ),

    name: 'Default'
};

export const WithImageAndPrice = {
    render: () => (
        <VariantSelectionPreview
            selectedOptions={selectedOptionsAllValid}
            productName="Product Name"
            variantImage={variantImages[0]}
            callToActions={callToActionsMock}
            configurator={configuratorMock}
            selectedEdition={configuratorMock.selectedEdition}
        />
    ),

    name: 'With image and price'
};

export const WithDisabledVariant = {
    render: () => (
        <VariantSelectionPreview
            selectedOptions={selectedOptionsAllValid}
            productName="Product Name"
            variantImage={variantImages[0]}
            callToActions={callToActionsMock}
            configurator={configuratorMock}
            selectedEdition={configuratorMock.selectedEdition}
            isVariantEnabled={false}
        />
    ),

    name: 'With disabled variant'
};

export const Condensed = {
    render: () => (
        <VariantSelectionPreview
            selectedOptions={selectedOptionsAllValid}
            productName="Product Name"
            variantImage={variantImages[0]}
            callToActions={callToActionsMock}
            configurator={configuratorMock}
            selectedEdition={configuratorMock.selectedEdition}
            isCondensed
        />
    ),

    name: 'Condensed'
};
