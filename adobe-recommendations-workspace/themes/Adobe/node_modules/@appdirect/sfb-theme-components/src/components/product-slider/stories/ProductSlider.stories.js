import React from 'react';
import { ProductSliderComponent as ProductSlider } from '../ProductSlider';
import { getArgTypes, getArgs } from '../../../tools/controlsHelper';
import { sliderMockSettings, sliderMockSettingsNoQuickview } from '../../../../mocks/home/slider';
import { IS_DESCRIPTION_VISIBLE, IS_RATINGS_VISIBLE, IS_VENDOR_VISIBLE, IS_BADGES_VISIBLE, IS_RIBBONS_VISIBLE } from '../../../constants/components/schemas/product-slider';

const getWrappedArgTypes = () => ({
    ...getArgTypes(ProductSlider.schema().form),
    displayOptions: {
        control: 'check',
        options: [IS_DESCRIPTION_VISIBLE, IS_RATINGS_VISIBLE, IS_VENDOR_VISIBLE, IS_BADGES_VISIBLE, IS_RIBBONS_VISIBLE]
    },
    quickviewViewMode: {
        control: 'radio',
        options: ['noimg', 'default', 'detailed', '2columns']
    }
});

const getWrappedArgs = () => ({
    ...getArgs(ProductSlider.schema().form),
    quickviewViewMode: 'default'
});

export default {
    title: 'Components/Product Slider',
    component: ProductSlider,
    argTypes: getWrappedArgTypes(),
    parameters: {
        controls: {
            include: Object.keys(getWrappedArgTypes())
        }
    }
};

export const Default = {
    render: args => (
        <div style={{ width: '100%' }}>
            <ProductSlider settings={{ ...sliderMockSettingsNoQuickview.settings, ...args }} />
        </div>
    ),
    args: getWrappedArgs()
};

export const StaticSlider = {
    render: args => (
        <ProductSlider
            settings={{
                ...args,
                productsList: {
                    items: sliderMockSettings.settings.productsList.items.slice(0, 3)
                }
            }}
        />
    ),
    args: getWrappedArgs()
};

export const Empty = {
    render: args => (
        <ProductSlider
            settings={{
                ...args,
                productsList: {
                    items: []
                }
            }}
        />
    ),
    args: getWrappedArgs()
};

export const WithSettings = {
    render: args => <ProductSlider settings={args} />,
    args: getArgs(ProductSlider.schema().form)
};
