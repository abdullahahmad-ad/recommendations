import { COLORPICKER, DROPDOWN, IMAGE_UPLOADER, RADIO, GROUP_HEADER, TOGGLE } from '../../schemaComponentTypes';
import { BACKGROUND_COLOR, BACKGROUND_IMAGE } from '../../backgroundSettings';
import { SMALL, MEDIUM, LARGE } from '../../sizes';
import { LIGHT, DARK } from '../../themeColor';

export const BACKGROUND_TYPE_OPTIONS = [BACKGROUND_IMAGE, BACKGROUND_COLOR];
export const SIZE_OPTIONS = [SMALL, MEDIUM, LARGE];
export const TEXT_COLOR_OPTIONS = [LIGHT, DARK];

export const productBannerFormSchema = {
    spacer: {
        type: GROUP_HEADER,
        title: 'uieditor.sfbComponent.productBanner.spacer.title',
        symbol: 'style'
    },
    backgroundType: {
        title: 'uieditor.sfbComponent.productBanner.backgroundType.title',
        type: RADIO,
        required: false,
        defaultValue: BACKGROUND_TYPE_OPTIONS[1].value,
        options: BACKGROUND_TYPE_OPTIONS
    },
    backgroundImg: {
        title: 'uieditor.sfbComponent.productBanner.backgroundImg.title',
        caption: 'uieditor.sfbComponent.productBanner.backgroundImg.caption',
        placeholder: 'uieditor.sfbComponent.productBanner.backgroundImg.placeholder',
        defaultValue: {
            filename: '',
            type: 'IMAGE_UPLOADER',
            url: ''
        },
        type: IMAGE_UPLOADER,
        required: false,
        conditionalAttributes: {
            isDisabled: {
                when: 'backgroundType',
                connector: 'equals',
                value: BACKGROUND_COLOR.value
            }
        }
    },
    bannerBackgroundColor: {
        title: 'uieditor.sfbComponent.productBanner.bannerBackgroundColor.title',
        defaultValue: '#ffffff',
        type: COLORPICKER,
        conditionalAttributes: {
            isDisabled: {
                when: 'backgroundType',
                connector: 'equals',
                value: BACKGROUND_IMAGE.value
            }
        }
    },
    textColor: {
        title: 'uieditor.sfbComponent.productBanner.textColor.title',
        type: DROPDOWN,
        required: true,
        defaultValue: TEXT_COLOR_OPTIONS[1].value,
        options: TEXT_COLOR_OPTIONS
    },
    spacer3: {
        type: GROUP_HEADER,
        title: 'uieditor.sfbComponent.productBanner.spacer3.title',
        symbol: 'settings'
    },
    settingsHeight: {
        title: 'uieditor.sfbComponent.productBanner.settingsHeight.title',
        type: DROPDOWN,
        required: true,
        defaultValue: SIZE_OPTIONS[1].value,
        options: SIZE_OPTIONS
    },
    showRatings: {
        labelOn: 'uieditor.sfbComponent.productBanner.showRatings.labelOn',
        labelOff: 'uieditor.sfbComponent.productBanner.showRatings.labelOff',
        defaultValue: true,
        type: TOGGLE
    },
    productNameSize: {
        title: 'uieditor.sfbComponent.productBanner.productNameSize.title',
        type: DROPDOWN,
        required: true,
        defaultValue: SIZE_OPTIONS[1].value,
        options: SIZE_OPTIONS
    },
    descTextSize: {
        title: 'uieditor.sfbComponent.productBanner.descTextSize.title',
        type: DROPDOWN,
        required: true,
        defaultValue: SIZE_OPTIONS[1].value,
        options: SIZE_OPTIONS
    }
};

const { showRatings, ...formWithoutRatings } = productBannerFormSchema;

export const bundleBannerFormSchema = formWithoutRatings;
