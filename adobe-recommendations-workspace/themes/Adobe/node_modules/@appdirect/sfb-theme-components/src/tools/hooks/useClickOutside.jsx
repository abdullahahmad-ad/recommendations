/* eslint-disable no-console */
import { useEffect } from 'react';

const useClickOutside = (elementRef, onClickOutside) => {
    useEffect(() => {
        const handleClickOutside = e => {
            try {
                if (!elementRef?.current) {
                    return;
                }
                // TEMP FIX: Ensure the ref isn't a detached DOM node.
                // Additional re-renders are causing the ref to be detached.
                if (document.contains(e.target) && !elementRef.current.contains(e.target)) {
                    onClickOutside(e);
                }
            } catch (error) {
                console.error('Error in useClickOutside:', error);
            }
        };

        document.addEventListener('click', handleClickOutside);
        return () => document.removeEventListener('click', handleClickOutside);
    }, [elementRef, onClickOutside]);
};

export default useClickOutside;
