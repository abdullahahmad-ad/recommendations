import { NAMESPACES, SECTIONS } from '../constants/namespaces';

const components = {
    PageOrderableComponents: {},
    HomeOrderableComponents: {},
    ProfileOrderableComponents: {},
    HeaderOrderableComponents: {}
};

export function getOrderableComponents() {
    // return cached if exists
    if (Object.keys(components.PageOrderableComponents).length) {
        return components;
    }

    const AllComponents = window.__ADComponents; // eslint-disable-line no-underscore-dangle

    if (!AllComponents) {
        console.log('OrderableComponents error - __ADComponents undefined: ');
        return components;
    }

    Object.keys(AllComponents).forEach(Component => {
        try {
            const ComponentValue = AllComponents[Component];

            if (!ComponentValue || typeof ComponentValue === 'undefined') {
                console.error('OrderableComponents error - Component undefined: ', ComponentValue);
                return;
            }

            if (!ComponentValue?.schema || (typeof ComponentValue?.schema !== 'function')) {
                // console.error('OrderableComponents error - Component has no schema: ', Component);
                return;
            }

            const schema = ComponentValue?.schema();
            const orderableSection = schema?.orderableSection;

            if (!orderableSection || !Array.isArray(orderableSection) || !orderableSection?.length) {
                // console.log('OrderableComponents error - Component has no orderableSection:', Component);
                return;
            }

            components.PageOrderableComponents[Component] = ComponentValue;

            orderableSection.forEach(section => {
                switch (section) {
                    case NAMESPACES.home:
                        components.HomeOrderableComponents[Component] = ComponentValue;
                        break;
                    case NAMESPACES.profile:
                        components.ProfileOrderableComponents[Component] = ComponentValue;
                        break;
                    case SECTIONS.header:
                        components.HeaderOrderableComponents[Component] = ComponentValue;
                        break;
                    default:
                        // console.log('OrderableComponents error - unknown section: ', section);
                }
            });
        } catch (e) {
            console.log(`OrderableComponents error while reading ${Component} ${e}`);
        }
    });

    return components;
}
