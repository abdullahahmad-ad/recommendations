import React from 'react';
import { CarouselComponent as Carousel } from '../Carousel';
import { carouselMockData } from '../../../../mocks/home/carousel';
import { getArgTypes, getArgs } from '../../../tools/controlsHelper';
import { BACKGROUND_COLOR } from '../../../constants/backgroundSettings';

const settingsWithPreviewMode = { slides: carouselMockData.slides, isPreviewMode: true };

const settingsWithSlides = () => ({
    backgroundImgUrl: 'http://lorempixel.com/g/800/600/abstract/',
    ...getArgs(Carousel.schema().form),
    slides: carouselMockData.slides
});

const wrappedArgTypes = {
    ...getArgTypes(Carousel.schema().form),
    backgroundImgUrl: {
        control: 'text',
        description: 'The URL of the background image'
    },
    height: {
        control: 'select',
        options: ['Small', 'Medium', 'Large'],
        mapping: {
            Small: 400,
            Medium: 555,
            Large: 660
        },
        description: 'The height of the carousel'
    },
    backgroundColor: {
        control: 'color',
        if: { arg: 'backgroundType', eq: BACKGROUND_COLOR.value },
        description: 'The background color of the carousel'
    }
};

export default {
    title: 'Components/Carousel',
    component: Carousel,
    argTypes: wrappedArgTypes,
    parameters: {
        controls: {
            disable: true
        }
    }
};

export const Default = {
    render: () => (
        <Carousel
            data={carouselMockData.i18n}
            settings={{ slides: carouselMockData.slides }}
        />
    )
};

export const InsideASmallerCenteredContainer = {
    render: () => (
        <div style={{ maxWidth: '992px', margin: '0 auto' }}>
            <Carousel
                settings={{ slides: carouselMockData.slides }}
            />
        </div>
    )
};

export const PreviewMode = {
    render: () => <Carousel settings={settingsWithPreviewMode} />
};

export const WithSettings = {
    render: ({ backgroundImgUrl, ...args }) => (
        <Carousel
            data={{ i18n: carouselMockData.i18n }}
            settings={{ ...args, backgroundImg: { url: backgroundImgUrl } }}
        />
    ),
    args: settingsWithSlides(),
    parameters: {
        controls: {
            include: [...Object.keys(wrappedArgTypes), 'slides'],
            exclude: ['backgroundImg'],
            disable: false
        }
    }
};
