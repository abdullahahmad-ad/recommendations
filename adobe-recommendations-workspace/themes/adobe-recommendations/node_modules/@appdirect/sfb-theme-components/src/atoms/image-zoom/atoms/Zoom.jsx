import React, { useState, useEffect } from 'react';
import PropTypes from 'prop-types';
import ReactDOM from 'react-dom';
import { createNamespace } from '../../../tools/namingTools';
import { getWindowDimensions } from '../../../tools/dimensions/getWindowDimensions';

const n = createNamespace('ImageZoom');

const Zoom = ({
    top,
    left,
    width,
    height,
    src,
    x,
    y,
    isMobile
}) => {
    const [portal, setPortal] = useState(null);
    useEffect(() => {
        const portalDomNode = document.createElement('div');
        portalDomNode.classList.add(n('portal').props.className);
        document.body.append(portalDomNode);
        setPortal(portalDomNode);
        return () => portalDomNode.remove();
    }, []);

    let dimensionVars;
    let translate;
    if (!isMobile) {
        dimensionVars = {
            top: `${top}px`,
            left: `${left}px`,
            width: `${width}px`,
            height: `${height}px`
        };

        translate = { x: `${x * -100}%`, y: `${y * -100}%` };
    } else {
        const { width: winWidth, height: winHeight } = getWindowDimensions();
        dimensionVars = {
            top: 0,
            left: 0,
            width: `${winWidth}px`,
            height: `${winHeight}px`
        };
        translate = { x: `${x * -100}%`, y: `${y * -100}%` };
    }
    const content = (
        <div {...n('zoomContainer').withVariables(dimensionVars).props}>
            <img src={src} alt="zoom" {...n('zoomImage').withVariables(translate).props} />
        </div>
    );
    if (portal) {
        return ReactDOM.createPortal(
            content,
            portal
        );
    }
    return null;
};

Zoom.propTypes = {
    top: PropTypes.number,
    left: PropTypes.number,
    width: PropTypes.number,
    height: PropTypes.number,
    x: PropTypes.number,
    y: PropTypes.number,
    isMobile: PropTypes.bool,
    src: PropTypes.string,
    imgDimensions: PropTypes.shape({
        width: PropTypes.number,
        height: PropTypes.number
    })
};

Zoom.defaultProps = {
    top: 0,
    left: 0,
    width: 0,
    height: 0,
    x: 0,
    y: 0,
    isMobile: false,
    src: '',
    imgDimensions: {
        width: 0,
        height: 0
    }
};

export default Zoom;
