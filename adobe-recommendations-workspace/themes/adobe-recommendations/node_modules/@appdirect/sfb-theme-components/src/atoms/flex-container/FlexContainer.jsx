import React, { useState } from 'react';
import PropTypes from 'prop-types';
import { createNamespace } from '../../tools/namingTools';
import { CENTER } from '../../constants/alignment';
// IMPORTANT: (s)css should be imported after other atoms/components
import './styles/FlexContainer.scss';

const n = createNamespace('FlexContainer');

const FlexContainer = ({
    component: Component,
    itemList,
    flexContainerSettings = {},
    ...otherProps
}) => {
    const {
        rowGap,
        columnGap,
        displayBorder,
        contentAlignment
    } = flexContainerSettings;
    const [itemWidth, setItemWidth] = useState();
    const wrapperModifiers = [
        displayBorder && 'with-border'
    ];

    const itemModifier = [
        displayBorder && 'with-border'
    ];

    return (
        <div
            {...n('wrapper', wrapperModifiers).withE2EId().props}
            style={{
                '--item-width': `${itemWidth}px`,
                '--row-gap': `${rowGap}px`,
                '--column-gap': `${columnGap}px`,
                '--justify-content': contentAlignment
            }}
        >
            {itemList?.map(item => (
                item?.isVisible !== false
                && (
                    <div {...n('item', itemModifier).withE2EId().props} key={item.key || item.uuid}>
                        <Component
                            {...item}
                            {...otherProps}
                            setItemWidth={setItemWidth}
                        />
                    </div>
                )
            ))}
        </div>
    );
};

FlexContainer.propTypes = {
    component: PropTypes.func.isRequired,
    itemList: PropTypes.array.isRequired,
    flexContainerSettings: PropTypes.object
};

FlexContainer.defaultProps = {
    flexContainerSettings: {
        rowGap: 0,
        columnGap: 0,
        displayBorder: false,
        contentAlignment: CENTER.value
    }
};

export default FlexContainer;
